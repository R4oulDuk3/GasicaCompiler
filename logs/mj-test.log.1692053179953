INFO  00:45:44,832 - Compiling source file: C:\Users\Gavrilo\eclipse-workspace\GasicaCompiler\test\program.mj
INFO  00:45:44,855 - #2 program
INFO  00:45:44,855 - #47 TEST
INFO  00:45:44,855 - #47 int
INFO  00:45:44,855 - #47 a
INFO  00:45:44,855 - #5 ;
INFO  00:45:44,856 - #47 int
INFO  00:45:44,856 - #47 b
INFO  00:45:44,856 - #8 ,
INFO  00:45:44,856 - #47 c
INFO  00:45:44,856 - #41 [
INFO  00:45:44,856 - #42 ]
INFO  00:45:44,856 - #5 ;
INFO  00:45:44,856 - #21 const
INFO  00:45:44,856 - #47 int
INFO  00:45:44,856 - #47 d
INFO  00:45:44,856 - #12 =
INFO  00:45:44,856 - #46 1
INFO  00:45:44,856 - #5 ;
INFO  00:45:44,857 - #21 const
INFO  00:45:44,857 - #47 int
INFO  00:45:44,857 - #47 e
INFO  00:45:44,857 - #12 =
INFO  00:45:44,869 - #46 1
INFO  00:45:44,869 - #8 ,
INFO  00:45:44,869 - #47 f
INFO  00:45:44,869 - #12 =
INFO  00:45:44,869 - #46 2
INFO  00:45:44,869 - #5 ;
INFO  00:45:44,869 - #21 const
INFO  00:45:44,869 - #47 char
INFO  00:45:44,869 - #47 g
INFO  00:45:44,869 - #12 =
INFO  00:45:44,869 - #44 's'
INFO  00:45:44,869 - #5 ;
INFO  00:45:44,869 - #21 const
INFO  00:45:44,869 - #47 bool
INFO  00:45:44,869 - #47 testBool
INFO  00:45:44,869 - #12 =
INFO  00:45:44,869 - #45 true
INFO  00:45:44,869 - #5 ;
INFO  00:45:44,869 - #3 {
INFO  00:45:44,869 - #13 void
INFO  00:45:44,870 - #47 f
INFO  00:45:44,870 - #6 (
INFO  00:45:44,870 - #47 int
INFO  00:45:44,870 - #47 a
INFO  00:45:44,870 - #7 )
INFO  00:45:44,870 - #3 {
INFO  00:45:44,870 - #47 x
INFO  00:45:44,871 - #12 =
INFO  00:45:44,871 - #47 arg
INFO  00:45:44,872 - #5 ;
INFO  00:45:44,872 - #47 x
INFO  00:45:44,872 - #37 ++
INFO  00:45:44,872 - #5 ;
INFO  00:45:44,872 - #47 x
INFO  00:45:44,872 - #38 --
INFO  00:45:44,872 - #5 ;
INFO  00:45:44,872 - #47 x
INFO  00:45:44,872 - #6 (
INFO  00:45:44,872 - #7 )
INFO  00:45:44,873 - #5 ;
INFO  00:45:44,873 - #47 x
INFO  00:45:44,873 - #6 (
INFO  00:45:44,873 - #47 a
INFO  00:45:44,873 - #7 )
INFO  00:45:44,873 - #5 ;
INFO  00:45:44,873 - #47 x
INFO  00:45:44,873 - #6 (
INFO  00:45:44,873 - #47 a
INFO  00:45:44,873 - #8 ,
INFO  00:45:44,873 - #47 b
INFO  00:45:44,873 - #7 )
INFO  00:45:44,873 - #5 ;
INFO  00:45:44,873 - #4 }
INFO  00:45:44,873 - #13 void
INFO  00:45:44,874 - #47 f
INFO  00:45:44,874 - #6 (
INFO  00:45:44,874 - #47 char
INFO  00:45:44,874 - #47 ch
INFO  00:45:44,874 - #8 ,
INFO  00:45:44,874 - #47 int
INFO  00:45:44,874 - #47 a
INFO  00:45:44,874 - #8 ,
INFO  00:45:44,874 - #47 int
INFO  00:45:44,874 - #47 arg
INFO  00:45:44,874 - #7 )
INFO  00:45:44,874 - #47 int
INFO  00:45:44,874 - #47 x
INFO  00:45:44,874 - #8 ,
INFO  00:45:44,874 - #47 a
INFO  00:45:44,874 - #5 ;
INFO  00:45:44,874 - #47 char
INFO  00:45:44,874 - #47 c
INFO  00:45:44,874 - #5 ;
INFO  00:45:44,874 - #47 int
INFO  00:45:44,874 - #47 arr
INFO  00:45:44,874 - #41 [
INFO  00:45:44,874 - #42 ]
INFO  00:45:44,874 - #5 ;
INFO  00:45:44,874 - #3 {
INFO  00:45:44,874 - #47 i
INFO  00:45:44,875 - #12 =
INFO  00:45:44,875 - #46 0
INFO  00:45:44,875 - #5 ;
INFO  00:45:44,875 - #47 val
INFO  00:45:44,875 - #12 =
INFO  00:45:44,875 - #17 new
INFO  00:45:44,875 - #47 Table
INFO  00:45:44,875 - #6 (
INFO  00:45:44,875 - #46 2
INFO  00:45:44,875 - #7 )
INFO  00:45:44,875 - #5 ;
INFO  00:45:44,875 - #47 arr
INFO  00:45:44,875 - #12 =
INFO  00:45:44,875 - #17 new
INFO  00:45:44,875 - #47 int
INFO  00:45:44,875 - #41 [
INFO  00:45:44,875 - #46 3
INFO  00:45:44,875 - #42 ]
INFO  00:45:44,875 - #5 ;
INFO  00:45:44,875 - #16 while
INFO  00:45:44,875 - #6 (
INFO  00:45:44,875 - #47 i
INFO  00:45:44,875 - #33 <
INFO  00:45:44,875 - #46 3
INFO  00:45:44,876 - #7 )
INFO  00:45:44,876 - #47 a
INFO  00:45:44,876 - #37 ++
INFO  00:45:44,876 - #5 ;
INFO  00:45:44,876 - #47 arr
INFO  00:45:44,876 - #40 .
INFO  00:45:44,876 - #24 foreach
INFO  00:45:44,876 - #6 (
INFO  00:45:44,876 - #47 x
INFO  00:45:44,877 - #43 =>
INFO  00:45:44,877 - #47 a
INFO  00:45:44,877 - #37 ++
INFO  00:45:44,877 - #5 ;
INFO  00:45:44,877 - #7 )
INFO  00:45:44,877 - #5 ;
INFO  00:45:44,877 - #47 arr
INFO  00:45:44,877 - #40 .
INFO  00:45:44,877 - #24 foreach
INFO  00:45:44,877 - #6 (
INFO  00:45:44,877 - #47 x
INFO  00:45:44,877 - #43 =>
INFO  00:45:44,877 - #9 print
INFO  00:45:44,877 - #6 (
INFO  00:45:44,877 - #47 x
INFO  00:45:44,877 - #7 )
INFO  00:45:44,878 - #5 ;
INFO  00:45:44,878 - #7 )
INFO  00:45:44,878 - #5 ;
INFO  00:45:44,878 - #47 val
INFO  00:45:44,878 - #40 .
INFO  00:45:44,878 - #47 pos
INFO  00:45:44,878 - #12 =
INFO  00:45:44,878 - #17 new
INFO  00:45:44,878 - #47 int
INFO  00:45:44,878 - #41 [
INFO  00:45:44,878 - #47 size
INFO  00:45:44,878 - #42 ]
INFO  00:45:44,878 - #5 ;
INFO  00:45:44,878 - #47 val
INFO  00:45:44,878 - #40 .
INFO  00:45:44,879 - #47 neg
INFO  00:45:44,879 - #12 =
INFO  00:45:44,879 - #17 new
INFO  00:45:44,879 - #47 int
INFO  00:45:44,879 - #41 [
INFO  00:45:44,879 - #47 size
INFO  00:45:44,879 - #42 ]
INFO  00:45:44,879 - #5 ;
INFO  00:45:44,879 - #18 read
INFO  00:45:44,879 - #6 (
INFO  00:45:44,879 - #47 x
INFO  00:45:44,879 - #7 )
INFO  00:45:44,879 - #5 ;
INFO  00:45:44,879 - #47 f
INFO  00:45:44,879 - #6 (
INFO  00:45:44,879 - #47 c
INFO  00:45:44,879 - #8 ,
INFO  00:45:44,879 - #47 x
INFO  00:45:44,879 - #8 ,
INFO  00:45:44,879 - #47 i
INFO  00:45:44,879 - #7 )
INFO  00:45:44,879 - #5 ;
INFO  00:45:44,879 - #18 read
INFO  00:45:44,879 - #6 (
INFO  00:45:44,879 - #47 rows
INFO  00:45:44,879 - #7 )
INFO  00:45:44,879 - #5 ;
INFO  00:45:44,879 - #47 x
INFO  00:45:44,879 - #12 =
INFO  00:45:44,879 - #47 rows
INFO  00:45:44,879 - #5 ;
INFO  00:45:44,879 - #14 if
INFO  00:45:44,880 - #6 (
INFO  00:45:44,880 - #46 0
INFO  00:45:44,880 - #34 <=
INFO  00:45:44,880 - #47 x
INFO  00:45:44,880 - #35 &&
INFO  00:45:44,880 - #47 x
INFO  00:45:44,880 - #33 <
INFO  00:45:44,880 - #47 size
INFO  00:45:44,880 - #7 )
INFO  00:45:44,880 - #3 {
ERROR 00:45:44,880 - 
Sintaksna greska na liniji 38
ERROR 00:45:44,880 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 38
INFO  00:45:44,880 - S class: Symbol

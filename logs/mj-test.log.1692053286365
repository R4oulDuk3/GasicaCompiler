INFO  00:47:55,484 - Compiling source file: C:\Users\Gavrilo\eclipse-workspace\GasicaCompiler\test\program.mj
INFO  00:47:55,507 - #2 program
INFO  00:47:55,507 - #47 TEST
INFO  00:47:55,507 - #47 int
INFO  00:47:55,507 - #47 a
INFO  00:47:55,507 - #5 ;
INFO  00:47:55,508 - #47 int
INFO  00:47:55,508 - #47 b
INFO  00:47:55,508 - #8 ,
INFO  00:47:55,508 - #47 c
INFO  00:47:55,508 - #41 [
INFO  00:47:55,508 - #42 ]
INFO  00:47:55,508 - #5 ;
INFO  00:47:55,508 - #21 const
INFO  00:47:55,508 - #47 int
INFO  00:47:55,508 - #47 d
INFO  00:47:55,508 - #12 =
INFO  00:47:55,509 - #46 1
INFO  00:47:55,509 - #5 ;
INFO  00:47:55,509 - #21 const
INFO  00:47:55,509 - #47 int
INFO  00:47:55,509 - #47 e
INFO  00:47:55,509 - #12 =
INFO  00:47:55,509 - #46 1
INFO  00:47:55,509 - #8 ,
INFO  00:47:55,510 - #47 f
INFO  00:47:55,510 - #12 =
INFO  00:47:55,510 - #46 2
INFO  00:47:55,510 - #5 ;
INFO  00:47:55,510 - #21 const
INFO  00:47:55,510 - #47 char
INFO  00:47:55,510 - #47 g
INFO  00:47:55,510 - #12 =
INFO  00:47:55,510 - #44 's'
INFO  00:47:55,510 - #5 ;
INFO  00:47:55,510 - #21 const
INFO  00:47:55,510 - #47 bool
INFO  00:47:55,510 - #47 testBool
INFO  00:47:55,510 - #12 =
INFO  00:47:55,510 - #45 true
INFO  00:47:55,510 - #5 ;
INFO  00:47:55,510 - #3 {
INFO  00:47:55,510 - #13 void
INFO  00:47:55,511 - #47 f
INFO  00:47:55,511 - #6 (
INFO  00:47:55,511 - #47 int
INFO  00:47:55,511 - #47 a
INFO  00:47:55,511 - #7 )
INFO  00:47:55,511 - #3 {
INFO  00:47:55,511 - #47 x
INFO  00:47:55,512 - #12 =
INFO  00:47:55,512 - #47 arg
INFO  00:47:55,513 - #5 ;
INFO  00:47:55,513 - #47 x
INFO  00:47:55,513 - #37 ++
INFO  00:47:55,513 - #5 ;
INFO  00:47:55,513 - #47 x
INFO  00:47:55,513 - #38 --
INFO  00:47:55,513 - #5 ;
INFO  00:47:55,513 - #47 x
INFO  00:47:55,513 - #6 (
INFO  00:47:55,513 - #7 )
INFO  00:47:55,514 - #5 ;
INFO  00:47:55,514 - #47 x
INFO  00:47:55,514 - #6 (
INFO  00:47:55,514 - #47 a
INFO  00:47:55,514 - #7 )
INFO  00:47:55,514 - #5 ;
INFO  00:47:55,514 - #47 x
INFO  00:47:55,514 - #6 (
INFO  00:47:55,514 - #47 a
INFO  00:47:55,514 - #8 ,
INFO  00:47:55,514 - #47 b
INFO  00:47:55,514 - #7 )
INFO  00:47:55,514 - #5 ;
INFO  00:47:55,514 - #4 }
INFO  00:47:55,515 - #13 void
INFO  00:47:55,515 - #47 f
INFO  00:47:55,515 - #6 (
INFO  00:47:55,515 - #47 char
INFO  00:47:55,515 - #47 ch
INFO  00:47:55,515 - #8 ,
INFO  00:47:55,515 - #47 int
INFO  00:47:55,515 - #47 a
INFO  00:47:55,515 - #8 ,
INFO  00:47:55,515 - #47 int
INFO  00:47:55,515 - #47 arg
INFO  00:47:55,515 - #7 )
INFO  00:47:55,515 - #47 int
INFO  00:47:55,515 - #47 x
INFO  00:47:55,515 - #8 ,
INFO  00:47:55,515 - #47 a
INFO  00:47:55,515 - #5 ;
INFO  00:47:55,515 - #47 char
INFO  00:47:55,515 - #47 c
INFO  00:47:55,515 - #5 ;
INFO  00:47:55,515 - #47 int
INFO  00:47:55,516 - #47 arr
INFO  00:47:55,516 - #41 [
INFO  00:47:55,516 - #42 ]
INFO  00:47:55,516 - #5 ;
INFO  00:47:55,516 - #3 {
INFO  00:47:55,516 - #47 i
INFO  00:47:55,516 - #12 =
INFO  00:47:55,516 - #46 0
INFO  00:47:55,516 - #5 ;
INFO  00:47:55,516 - #47 val
INFO  00:47:55,516 - #12 =
INFO  00:47:55,516 - #17 new
INFO  00:47:55,516 - #47 Table
INFO  00:47:55,516 - #6 (
INFO  00:47:55,516 - #46 2
INFO  00:47:55,516 - #7 )
INFO  00:47:55,516 - #5 ;
INFO  00:47:55,516 - #47 arr
INFO  00:47:55,516 - #12 =
INFO  00:47:55,516 - #17 new
INFO  00:47:55,516 - #47 int
INFO  00:47:55,516 - #41 [
INFO  00:47:55,516 - #46 3
INFO  00:47:55,516 - #42 ]
INFO  00:47:55,516 - #5 ;
INFO  00:47:55,517 - #16 while
INFO  00:47:55,517 - #6 (
INFO  00:47:55,517 - #47 i
INFO  00:47:55,517 - #33 <
INFO  00:47:55,517 - #46 3
INFO  00:47:55,517 - #7 )
INFO  00:47:55,517 - #47 a
INFO  00:47:55,517 - #37 ++
INFO  00:47:55,517 - #5 ;
INFO  00:47:55,517 - #47 arr
INFO  00:47:55,517 - #40 .
INFO  00:47:55,518 - #24 foreach
INFO  00:47:55,518 - #6 (
INFO  00:47:55,518 - #47 x
INFO  00:47:55,518 - #43 =>
INFO  00:47:55,518 - #47 a
INFO  00:47:55,518 - #37 ++
INFO  00:47:55,518 - #5 ;
INFO  00:47:55,518 - #7 )
INFO  00:47:55,518 - #5 ;
INFO  00:47:55,518 - #47 arr
INFO  00:47:55,518 - #40 .
INFO  00:47:55,518 - #24 foreach
INFO  00:47:55,518 - #6 (
INFO  00:47:55,518 - #47 x
INFO  00:47:55,518 - #43 =>
INFO  00:47:55,518 - #9 print
INFO  00:47:55,518 - #6 (
INFO  00:47:55,518 - #47 x
INFO  00:47:55,518 - #7 )
INFO  00:47:55,518 - #5 ;
INFO  00:47:55,518 - #7 )
INFO  00:47:55,519 - #5 ;
INFO  00:47:55,519 - #47 val
INFO  00:47:55,519 - #40 .
INFO  00:47:55,519 - #47 pos
INFO  00:47:55,519 - #12 =
INFO  00:47:55,519 - #17 new
INFO  00:47:55,519 - #47 int
INFO  00:47:55,519 - #41 [
INFO  00:47:55,519 - #47 size
INFO  00:47:55,519 - #42 ]
INFO  00:47:55,519 - #5 ;
INFO  00:47:55,519 - #47 val
INFO  00:47:55,519 - #40 .
INFO  00:47:55,519 - #47 neg
INFO  00:47:55,519 - #12 =
INFO  00:47:55,519 - #17 new
INFO  00:47:55,519 - #47 int
INFO  00:47:55,519 - #41 [
INFO  00:47:55,519 - #47 size
INFO  00:47:55,519 - #42 ]
INFO  00:47:55,519 - #5 ;
INFO  00:47:55,520 - #18 read
INFO  00:47:55,520 - #6 (
INFO  00:47:55,520 - #47 x
INFO  00:47:55,520 - #7 )
INFO  00:47:55,520 - #5 ;
INFO  00:47:55,520 - #47 f
INFO  00:47:55,520 - #6 (
INFO  00:47:55,520 - #47 c
INFO  00:47:55,520 - #8 ,
INFO  00:47:55,520 - #47 x
INFO  00:47:55,520 - #8 ,
INFO  00:47:55,520 - #47 i
INFO  00:47:55,520 - #7 )
INFO  00:47:55,520 - #5 ;
INFO  00:47:55,520 - #18 read
INFO  00:47:55,520 - #6 (
INFO  00:47:55,520 - #47 rows
INFO  00:47:55,520 - #7 )
INFO  00:47:55,520 - #5 ;
INFO  00:47:55,520 - #47 x
INFO  00:47:55,520 - #12 =
INFO  00:47:55,521 - #47 rows
INFO  00:47:55,521 - #5 ;
INFO  00:47:55,521 - #14 if
INFO  00:47:55,521 - #6 (
INFO  00:47:55,521 - #47 a
INFO  00:47:55,521 - #7 )
INFO  00:47:55,521 - #47 a
INFO  00:47:55,521 - #37 ++
INFO  00:47:55,521 - #15 else
ERROR 00:47:55,521 - 
Sintaksna greska na liniji 37
ERROR 00:47:55,521 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 37
INFO  00:47:55,521 - S class: Symbol
